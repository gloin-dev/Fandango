# Gradle with JDK 8 to compile JAR
FROM gradle:7.5.1-jdk11 as gradleBuild
ENV APP_HOME=/usr/app/
WORKDIR $APP_HOME
COPY --chown=gradle:gradle . $APP_HOME
RUN gradle build -Denv=prod -x test --no-daemon

# springci/graalvm-ce docker image
FROM springci/graalvm-ce:master-java11 as graalvm
ARG ARG_ARTIFACT_NAME=fandango.jar
ENV APP_HOME=/usr/app/
WORKDIR $APP_HOME
COPY --from=gradleBuild $APP_HOME/build/libs/$ARG_ARTIFACT_NAME .
RUN gu install native-image
RUN native-image --version
RUN native-image \
    --initialize-at-run-time="io.micronaut.configuration.mongo.reactive.test.AbstractMongoProcessFactory" \
    --initialize-at-build-time=io.micrometer.core,io.micrometer.prometheus,io.micrometer.shaded.org.pcollections \
    -cp ${ARG_ARTIFACT_NAME}

# minimal linux image with glibc to run binary image
#FROM frolvlad/alpine-glibc
#ARG ARG_ARTIFACT_BIN_NAME=fandango
#ENV APP_HOME=/usr/app/
#WORKDIR $APP_HOME
#COPY --from=graalvm $APP_HOME/$ARG_ARTIFACT_BIN_NAME .
#EXPOSE 8585
#ENTRYPOINT ["./fandango"]

FROM ubuntu:20.04
RUN apt-get -qq update \
 && apt-get -y -qq install libxi6 libxtst6 libfreetype6 libpng16-16 libfontconfig1 libjpeg8 fonts-dejavu-extra graphviz \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG ARG_ARTIFACT_BIN_NAME=fandango
ENV APP_HOME=/usr/app/
WORKDIR $APP_HOME
COPY --from=graalvm $APP_HOME/$ARG_ARTIFACT_BIN_NAME .
EXPOSE 8585
ENTRYPOINT ["./fandango", "-headless"]